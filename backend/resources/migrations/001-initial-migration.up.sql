-- Create table for app_user
CREATE TABLE app_user (
  id            BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  username      text UNIQUE NOT NULL,
  password_hash text NOT NULL,
  created_at    timestamptz NOT NULL DEFAULT now()
);
--;;

-- Create table for discussion
CREATE TABLE chat (
  id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  kind       text NOT NULL CHECK (kind IN ('direct','group')),
  title      text,
  created_at timestamptz NOT NULL DEFAULT now()
);
--;;

-- Create table for “direct chat” pair between two app_users
CREATE TABLE direct_chat (
  user_a  BIGINT NOT NULL REFERENCES app_user(id),
  user_b  BIGINT NOT NULL REFERENCES app_user(id),
  chat_id BIGINT NOT NULL UNIQUE REFERENCES chat(id) ON DELETE CASCADE,
  PRIMARY KEY (user_a, user_b),
  CHECK (user_a <> user_b)
);
--;;

-- Indexes for direct chat conversation
CREATE INDEX idx_direct_by_user_a ON direct_chat(user_a);
--;;

CREATE INDEX idx_direct_by_user_b ON direct_chat(user_b);
--;;

-- Create table for participants
CREATE TABLE chat_participant (
  chat_id   BIGINT NOT NULL REFERENCES chat(id) ON DELETE CASCADE,
  user_id   BIGINT NOT NULL REFERENCES app_user(id) ON DELETE CASCADE,
  last_read_message_id BIGINT,
  last_read_at timestamptz,
  PRIMARY KEY (chat_id, user_id)
  -- If you want a FK here, uncomment next line (and create message first):
  -- , FOREIGN KEY (last_read_message_id) REFERENCES message(id) ON DELETE SET NULL
);
--;;

-- Create index for participant
CREATE INDEX idx_participant_user ON chat_participant(user_id);
--;;

-- Create table for messages
CREATE TABLE message (
  id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  chat_id     BIGINT NOT NULL REFERENCES chat(id) ON DELETE CASCADE,
  sender_id   BIGINT NOT NULL REFERENCES app_user(id),
  body        text NOT NULL,
  created_at  timestamptz NOT NULL DEFAULT now(),
  edited_at   timestamptz
);
--;;

-- Indexing for getting latest messages:
CREATE INDEX idx_msg_chat_iddesc ON message(chat_id, created_at DESC);
--;;